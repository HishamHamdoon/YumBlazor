@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using YumBlazor.Data

@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityRedirectManager RedirectManager

@if (externalLogins.Length == 0)
{
    <div>
        <p>
            All right Reserved @DateTime.Now.Year;
        </p>
    </div>
}
else
{
    <div class="d-grid gap-2">
        <form class="form-horizontal" action="Account/PerformExternalLogin" method="post">
            <div class="d-grid gap-2">
                <AntiforgeryToken />
                <input type="hidden" name="ReturnUrl" value="@ReturnUrl" />
                <div class="">
                    @foreach (var provider in externalLogins)
                    {
                        <button type="submit" class="btn btn-outline-dark" name="provider" 
                            value="@provider.Name" title="Log in using your
                            @provider.DisplayName account">
                            connect <span class="d-none d-sm-inline">with a @provider.DisplayName</span>
                            @provider.DisplayName
                        </button>
                    }
                </div>
            </div>
        </form>
    </div>
    
}

@code {
    private AuthenticationScheme[] externalLogins = [];

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        externalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).ToArray();
    }
}
